<Window x:Class="ItemListLivet.Views.SubWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ItemListLivet.Views"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:b="clr-namespace:ItemListLivet.Behavior"
        xmlns:vr="clr-namespace:ItemListLivet.ValidationRules"
        mc:Ignorable="d"
        Height="300" Width="300">
    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Mode}" Value="1">
                    <Setter Property="Title" Value="作成ウィンドウ" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Mode}" Value="2">
                    <Setter Property="Title" Value="更新ウィンドウ" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <Style x:Key="TextBoxHasError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="29*"/>
            <RowDefinition Height="185*"/>
            <RowDefinition Height="56*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="31*"/>
                <ColumnDefinition Width="42*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="label" Content="商品名"/>
            <TextBox x:Name="textBox" Grid.Column="1" TextWrapping="Wrap" Text="{Binding Item.ItemName, UpdateSourceTrigger=PropertyChanged}"/>
            <Label x:Name="label1" Content="カテゴリ" Grid.Row="1"/>
            <ComboBox x:Name="comboBox" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Categorys}" SelectedValue="{Binding Item.Category}"/>
            <Label x:Name="label2" Content="価格" Grid.Row="2"/>
            <TextBox x:Name="textBox1" Grid.Column="1" Grid.Row="2" TextWrapping="Wrap"  b:TextBoxBehaviors.IsNumeric="True" Style="{StaticResource TextBoxHasError}" >
                <Binding Path="Item.Price" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <vr:PriceValidationRule MinValue="0" MaxValue="9999" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label x:Name="label3" Content="作成者" Grid.Row="3"/>
            <TextBox x:Name="textBox3" Grid.Column="1" Grid.Row="3" TextWrapping="Wrap" Text="{Binding Item.CreateUser, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Button x:Name="button"  Grid.Row="2" Command="{Binding UpsertCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mode}" Value="1">
                            <Setter Property="Content" Value="作成" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mode}" Value="2">
                            <Setter Property="Content" Value="更新" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
